// <auto-generated />
using System;
using EReceipts.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EReceipts.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250717114444_init1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EReceipts.Domain.Models.ItemData", b =>
                {
                    b.Property<string>("InternalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("NetSale")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalSale")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("ValueDifference")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.HasKey("InternalCode");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ItemData");
                });

            modelBuilder.Entity("EReceipts.Domain.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Adjustment")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("FeesAmount")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousUuid")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceOldUuid")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalCommercialDiscount")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalItemsDiscount")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalSales")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("EReceipts.Domain.Models.ItemData", b =>
                {
                    b.HasOne("EReceipts.Domain.Models.Receipt", null)
                        .WithMany("ItemData")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("EReceipts.Domain.ValueObjects.DiscountData", "AdditionalCommercialDiscount", b1 =>
                        {
                            b1.Property<string>("ItemDataInternalCode")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Rate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.HasKey("ItemDataInternalCode");

                            b1.ToTable("ItemData");

                            b1.WithOwner()
                                .HasForeignKey("ItemDataInternalCode");
                        });

                    b.OwnsOne("EReceipts.Domain.ValueObjects.DiscountData", "AdditionalItemDiscount", b1 =>
                        {
                            b1.Property<string>("ItemDataInternalCode")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Rate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.HasKey("ItemDataInternalCode");

                            b1.ToTable("ItemData");

                            b1.WithOwner()
                                .HasForeignKey("ItemDataInternalCode");
                        });

                    b.OwnsMany("EReceipts.Domain.ValueObjects.DiscountData", "CommercialDiscountData", b1 =>
                        {
                            b1.Property<string>("ItemDataInternalCode")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Rate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.HasKey("ItemDataInternalCode", "Id");

                            b1.ToTable("ItemData");

                            b1.ToJson("CommercialDiscountData");

                            b1.WithOwner()
                                .HasForeignKey("ItemDataInternalCode");
                        });

                    b.OwnsMany("EReceipts.Domain.ValueObjects.DiscountData", "ItemDiscountData", b1 =>
                        {
                            b1.Property<string>("ItemDataInternalCode")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Rate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.HasKey("ItemDataInternalCode", "Id");

                            b1.ToTable("ItemData");

                            b1.ToJson("ItemDiscountData");

                            b1.WithOwner()
                                .HasForeignKey("ItemDataInternalCode");
                        });

                    b.OwnsMany("EReceipts.Domain.ValueObjects.TaxableItem", "TaxableItems", b1 =>
                        {
                            b1.Property<string>("ItemDataInternalCode")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<decimal>("Rate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("SubType")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("TaxType")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("ItemDataInternalCode", "Id");

                            b1.ToTable("ItemData");

                            b1.ToJson("TaxableItems");

                            b1.WithOwner()
                                .HasForeignKey("ItemDataInternalCode");
                        });

                    b.Navigation("AdditionalCommercialDiscount")
                        .IsRequired();

                    b.Navigation("AdditionalItemDiscount")
                        .IsRequired();

                    b.Navigation("CommercialDiscountData");

                    b.Navigation("ItemDiscountData");

                    b.Navigation("TaxableItems");
                });

            modelBuilder.Entity("EReceipts.Domain.Models.Receipt", b =>
                {
                    b.OwnsOne("EReceipts.Domain.Enums.Seller", "Seller", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ActivityCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("BranchCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CompanyTradeName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DeviceSerialNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Rin")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SyndicateLicenseNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");

                            b1.OwnsOne("EReceipts.Domain.Enums.BranchAddress", "BranchAddress", b2 =>
                                {
                                    b2.Property<Guid>("SellerReceiptId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("AdditionalInformation")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("BuildingNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Floor")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Governate")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Landmark")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PostalCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("RegionCity")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Room")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("SellerReceiptId");

                                    b2.ToTable("Receipts");

                                    b2.WithOwner()
                                        .HasForeignKey("SellerReceiptId");
                                });

                            b1.Navigation("BranchAddress")
                                .IsRequired();
                        });

                    b.OwnsMany("EReceipts.Domain.ValueObjects.DiscountData", "ExtraReceiptDiscountData", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Rate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.HasKey("ReceiptId", "Id");

                            b1.ToTable("Receipts");

                            b1.ToJson("ExtraReceiptDiscountData");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsOne("EReceipts.Domain.ValueObjects.Beneficiary", "Beneficiary", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Rate")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsOne("EReceipts.Domain.ValueObjects.Buyer", "Buyer", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Id")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("MobileNumber")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("PaymentNumber")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(1)
                                .HasColumnType("nvarchar(1)");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsOne("EReceipts.Domain.ValueObjects.Contractor", "Contractor", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<decimal>("Rate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsOne("EReceipts.Domain.ValueObjects.DocumentType", "DocumentType", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ReceiptType")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("TypeVersion")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsOne("EReceipts.Domain.ValueObjects.Header", "Header", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.Property<DateTime>("DateTimeIssued")
                                .HasColumnType("datetime2");

                            b1.Property<decimal>("ExchangeRate")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<decimal>("GrossWeight")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<decimal>("NetWeight")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("OrderDeliveryMode")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("PreviousUuid")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("ReceiptNumber")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("ReferenceOldUuid")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("SOrderNameCode")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("Uuid")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsMany("EReceipts.Domain.ValueObjects.TaxTotal", "TaxTotals", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 5)
                                .HasColumnType("decimal(18,5)");

                            b1.Property<string>("TaxType")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("ReceiptId", "Id");

                            b1.ToTable("Receipts");

                            b1.ToJson("TaxTotals");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.Navigation("Beneficiary")
                        .IsRequired();

                    b.Navigation("Buyer")
                        .IsRequired();

                    b.Navigation("Contractor")
                        .IsRequired();

                    b.Navigation("DocumentType")
                        .IsRequired();

                    b.Navigation("ExtraReceiptDiscountData");

                    b.Navigation("Header")
                        .IsRequired();

                    b.Navigation("Seller")
                        .IsRequired();

                    b.Navigation("TaxTotals");
                });

            modelBuilder.Entity("EReceipts.Domain.Models.Receipt", b =>
                {
                    b.Navigation("ItemData");
                });
#pragma warning restore 612, 618
        }
    }
}
